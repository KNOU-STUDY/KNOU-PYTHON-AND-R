plot(math, physics, pch=16, col=2, main="산점도")
abline(lm(physics~math))
lm.out = lm(physic~math)
lm.out = lm(physics~math)
summary(lm.out
)
lm.out$coef
reg.line = cat("yhat=",lm.out$coef[1],lm.out$coef[2])
yhat
reg.line
reg.line = paste("yhat=",lm.out$coef[1],"+",lm.out$coef[2])
reg.line
coef = round(lm.out$coef,3)
reg.line = paste("yhat=",coef[1],"+",coef[2])
reg.line
legend(locator(1), reg.line)
legend(locator(1), reg.line)
reg.line = paste("yhat=",coef[1],"+",coef[2],"math")
legend(locator(1), reg.line)
reg.line = paste("yhat=",coef[1],"+",coef[2],"math")
legend(locator(1), reg.line)
reg.line = paste("yhat=",coef[1],"+",coef[2],"*math")
legend(locator(1), reg.line)
reg.line = paste("yhat=",coef[1],"+",coef[2],"* math")
legend(locator(1), reg.line)
reg.line = paste("physics=",coef[1],"+",coef[2],"* math")
legend(locator(1), reg.line)
math = c(68,64,48,46,78,60,90,50,66,70)
physics = c(70,68,46,48,84,64,92,52,68,72)
cor(math, physics)
lm.out = lm(physics~math)
plot(math, physics, pch=16, col=2, main="(수학,물리) 산점도")
summary(lm.out)
coef = round(lm.out$coef,3)
abline(lm.out)
reg.line = paste("physics=",coef[1],"+",coef[2],"* math")
legend(locator(1), reg.line)
ex8 = read.table("c:/data/ex8.txt", header=T)
head(ex8)
plot(age,salary, type="n")
plot(age,salary, type="no")
attach(ex8)
plot(age,salary, type="n")
points(age[sex==1],salary[sex==1], pch=16, col=4)
points(age[sex==2],salary[sex==2], pch=18, col=2)
legend(locator(1), c("male","female"))
legend(locator(1), pch=c(16,18), lwd=3, legend=c('male','female'))
legend(locator(1), pch=c(16,18), lwd=3, legend=c('male','female'))
legend(locator(1), pch=c(16,18), col=c(4,2), legend=c('male','female'))
head(ex8)
plot(age,salary, type="n")
points(age[sex==1],salary[sex==1], pch=16, col=4)
points(age[sex==2],salary[sex==2], pch=18, col=2)
legend(locator(1), pch=c(16,18), col=c(4,2), legend=c('male','female'))
title('(나이, 월수입) 산점도(남녀별)')
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
q()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
library(HSAUR2)
library(MVA)
data(USairpollution)
jead(USairpollution)
head(USairpollution)
plot(manu, popul)
plot(manu, popul, data=USairpollution)
attach(USairpollution)
plot(manu, popul, data=USairpollution)
plot(manu, popul)
x=USairpollution[,c(3,4)]
bvbox(x, xlab="manu", ylab="popul")
plot(wind~temp, data=USairpollution, pch=9)
with(USairpollution, symbols(temp, wind, circles=SO2, inches=0.5, add=T)
)
title("Bubble Plot")
q()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(car)
data(Ornstein)
attach(Orstein)
attach(Ornstein)
tab = table(interlocks)
tab
x = sort(unique(interlocks)
)
x
plot(x, tab, type="h", xlab="Number of interlocks", ylab="Frequency")
points(x,tab,pch=16)
mod.ornstein = glm(interlocks ~ assets+nation+sector, family=poisson, data=Ornstein)
summary(mod.ornstein)
factor(nation)
factor(sector)
pred = predict(mod.ornstein, Ornstein)
pred
pred = cbind(ornstein, pred)
pred = cbind(interlocks, pred)
pred
campbell = expand.grid(turnout=c('voted', 'not.vote'),
preference=c('weak', 'medium', 'strong')
closedness=c('one.sided', 'close'))
campbell = expand.grid(turnout=c('voted', 'not.vote'),
closedness=c('one.sided', 'close')),
campbell = expand.grid(turnout=c('voted', 'not.vote'),
preference=c('weak', 'medium', 'strong'),
closedness=c('one.sided', 'close'))
counts = c(91, 39, 121, 49, 64, 24, 214, 87, 284, 76, 210, 25)
campbell.data = cbind(campbell, counts)
campbell.data
options(contrasts=c('contr.sum', 'contr.poly'))
mod.loglin = glm(counts ~ closedness*preference*turnout, family=poisson, data=campbell.data)
summary(mod.loglin)
Anova(mod.loglin)
q()
source("c:/vskm/SVOKmeans(2014-12-14).r")
iris.data = iris[,-5]
SVOKmeans(data=iris.data)
SVOKmeans(data=iris.data)
cls.v462 = read.table("c:/data/vsod/cls_v462_10_1.dat", header=T)
head(cls.v462)
SVOKmeans(data=cls.v462)
q()
63000*2+65278.88
63000+63000+65278.88
63000.00+63000.00+65278.88
63000.00+63000.00+65278
insurance.data = read.table("c:/Rfolder/data/insurance.txt", header=T)
head(insurance.data, n=11)
insurance.data = read.table("c:/Rfolder/data/insurance2.txt", header=T, na.string="-9")
head(insurance.data, n=11)
nsurance.data[c(10:16],)
insurance.data[c(10:16],)
insurance.data[c(10:16),]
head(insurance.data, n=11)
?head
head(insurance.data, n=-6)
head(insurance.data, n=6)
?read.csv
tab.data = read.table("tab.txt", sep="\t")
tab.data = read.table("tab.txt", header=T, sep="\t")
tab.data = read.table("c:\Rfolder\data\tab.txt", header=T, sep="\t")
tab.data = read.table("c:/Rfolder/data/tab.txt", header=T, sep="\t")
tab.data = read.table("c:/Rfolder/data/tab.txt", header=T, sep="\t")
tab.data
csv.data = read.csv("c:/Rfolder/data/csv.txt", header=T)
csv.data
write.table(tab.data, file="c:/Rfolder/data/test.txt", sep="\t")
write.table(tab.data, file="c:/Rfolder/data/test.txt")
test.data = read.table("c:/Rfolder/data/test.txt", header=T)
test.data
fwf.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,2,3,3,3,6,5),
col.names=c("id", "sex", job", "religion", "edu", "amount", "salary"))
fwf.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,2,3,3,3,6,5),
col.names=c("id", "sex", "job", "religion", "edu", "amount", "salary"))
fwf.data
fwf.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,2,3,3,3,6,6),
col.names=c("id", "sex", "job", "religion", "edu", "amount", "salary"),
na.string="-9")
fwf.data
fwf.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
col.names=c("id", "sex", "job", "religion", "edu", "amount", "salary"),
widths=c(2,2,3,3,3,6,6))
fwf.data
fwf.data[fwf.data$job==-9, "job"] = NA
fwf.data
fwf.data[fwf.data$edu==-9, "edu"] = NA
fwf.data[fwf.data$salary==-9, "salary"] = NA
fwf.data
fwf2.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,-2,-3,3,3,6,6))
fwf2.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,-2,-3,3,3,6,6)),
fwf2.data = read.fwf(file="c:/Rfolder/data/insurance3.txt",
widths=c(2,-2,-3,3,3,6,6),
col.names=c("id", "religion", "edu", "amount", "salary"))
fw2.data
fwf2.data
head(fwf.data,n=3)
head(fwf2.data,n=3)
q()
install.packages("xlsx")
library(xlsx)
alcohol.data = read.xlsx("c:/Rfolder/data/alcohol.xlsx", 1)
?read.xlsx
?library
head(alcohol.data,n=2)
alc2.data = read.xlsx("c:/Rfolder/data/alcohol.xlsx", 1, colIndex=c(1,2,6:7))
head(alc2.data, n=2)
q()
install.packages("RODBC")
library(RODBC)
channel <- odbcConnect
channel <- odbcConnect("score")
channel <- odbcConnect("score")
sqlTables(channel)
sqlFetch(channel, "midterm")
sqlFetch(channel, "endterm")
sqlQuery(channel, "select math from endterm")
sqlQuery(channel, "select * from endterm where ID1 > 10")
sqlQuery(channel, "select math physics from endterm")
sqlQuery(channel, "select * from endterm")
sqlQuery(channel, "select * from endterm where math > 70 ")
sqlQuery(channel, "select * from endterm where math > 80 ")
sqlQuery(channel, "select * from endterm where math >= 80 ")
> midterm <- sqlQuery(channel, "select * from midterm")
> endterm <- sqlQuery(channel, "select * from endterm")
> score <- cbind(midterm, endterm[,c(3:5)])
midterm <- sqlQuery(channel, "select * from midterm")
endterm <- sqlQuery(channel, "select * from endterm")
score <- cbind(midterm, endterm[,c(3:5)])
mean(score["korean"])
mean(score["korea"])
score
summary(score[3:7])
endterm
summary(score[3:6])
q()
utils:::menuInstallPkgs()
library(foreign)
ex1.data = read.spss("c:/Rfolder/data/ex1-1.sav")
ex1.data
ex1.data = read.spss("c:/Rfolder/data/ex1-1.sav", to.data.frame=T, use.value.label=T)
ex1.data
ex1 = ex1.data
mouse.data = ex1[rep(1:nrow(ex1), ex1$count),]
mouse.data
attach(mouse.data)
mouse.table = table(shock, response)
mouse.table
summary(mouse.table)
head(mouse.data)
?load
ls()
mouse.data
ex1
save(ex1, file="c:/Rfolder/data/ex1.RData)
")
save(ex1, file="c:/Rfolder/data/ex1.RData")
ls(ex1)
ls()
rm(ex1)
ls(ex1)
load("c:/Rfolder/data/ex1.RData)
")
load("c:/Rfolder/data/ex1.RData")
ex1
rm(ex1)
ex1
load("c:/Rfolder/data/ex1.RData")
ex1
wood.data
save(wood4.data, file="c:/Rfolder/data/wood4.RData")
rm(wood4.data)
wood4.data
load(file="c:/Rfolder/data/wood4.RData")
wood4
wood4.data
ls()
rm(wood4.data)
ls()
wood
wd = wood
wd
save(wd, file="c:/Rfolder/data/wd.RData")
rm(wd)
load(file="c:/Rfolder/data/wd.RData")
ls()
wd
load(file=file.choose())
fix(ex1)
ex1
wd
head(wd)
wd[3,3] = 999
head(wd)
wd[3,3] = 99
head(wd)
wd[4,3]=99
wd[4,4] = 99
head(wd)
wd[wd$x2 < 0.11, "x2"] = 99
wd
head(wd)
nwd = wd
nwd[nwd == 99] = NA
nwd
head(nwd)
rowSums(is.na(nwd))
colSums(is.na(nwd))
mywd = na.omit(nwd)
mywd
wd[wd == 99] = NA
fix(wd)
names(wd)[6] = "ny"
colnames(nwd) = c("a1", "a2", "a3", "a4", "a5", "newy")
nwd
wd
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(reshpae)
library(reshape)
?rename
names <- c("john", "tim", "andy")
ages <- c(50, 46, 25)
mydata <- data.frame(names,ages)
names(mydata) #-> "name",  "ages"
mydata
mydata <- rename(mydata, c(ages="age"))
names(mydata)
mydata
q()
names = c("김", "이", "박")
ages = c(50,44,35)
mydata <- data.frame(names,ages)
names(mydata)
mydata
mydata <- rename(mydata, c(ages="age"))
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(reshape)
mydata <- rename(mydata, c(ages="age"))
mydata
mydata <- rename(mydata, c(names="name"))
mydata
insurance.data
insurance.data$job = facotor(insurance.data$sex, levels=c(1:3), labels=c("blue-collar worker",
"white-collar worker", "expert"))
insurance.data$job = factor(insurance.data$sex, levels=c(1:3), labels=c("blue-collar worker",
"white-collar worker", "expert"))
insurance.data
insurance.data = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance$job = factor(insurance$job, levels=c(1:3), labels=c("blue-collar worker",
"white-collar worker", "expert"))
insurance
insurance$edu = ordered(insurance$edu, levels=c(1:5), labels=c("무학","국졸","중졸","고졸","대졸"))
insurance
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance$edu2 = ordered(insurance$edu, levels=c(1:5), labels=c("무학","국졸","중졸","고졸","대졸"))
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance$edu2 = ordered(insurance$edu, levels=c(1:5), labels=c("무학","국졸","중졸","고졸","대졸"))
insurance
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance$job = factor(insurance$job, levels=c(1:3), labels=c("근로자","사무직","전문가"))
insurance$edu2 = ordered(insurance$edu, levels=c(1:5), labels=c("무학","국졸","중졸","고졸","대졸"))
head(insurance)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(car)
?recode
drug = read.xlsx("c:/Rfolder/data/drug.xlsx", 1)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(xlsx)
drug = read.xlsx("c:/Rfolder/data/drug.xlsx", 1)
head(drug)
agr = age
drug$agr = drug$age
attach(drug)
agr[agr >=20 & agr <= 29 ] = 1
drug$agr[drug$agr >=20 & drug$agr <= 29 ] = 1
drug$agr[drug$agr >=30 & drug$agr <= 34 ] = 2
drug$agr[drug$agr >=35 & drug$agr <= 39 ] = 3
drug$agr[drug$agr >=20 & drug$agr <= 29 ] = 1
drug$agr = drug$age
drug$agr[drug$agr >=20 & drug$agr <= 40 ] = 1
drug$agr[drug$agr > 40 & drug$agr <= 60 ] = 2
drug$agr[drug$agr > 60 ] = 3
drug
drug$agr2 = drug$age
drug$agr2 = recode(drug$age, "20:40=1; 40:60=2;60:hi=3")
drug
drug$agr2 = drug$age
drug$agr2 = recode(drug$age, "lo:40=1; 40:60=2;60:hi=3")
drug
head(drug, n=3)
?recode
x = 1:12
sample(x)
sample(x, replace=T)
sample(x, 3)
insurance
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
select1 = insurance[which(insurance$sex='m'),]
select1 = insurance[insurance$sex='m',]
insurance
select1 = insurance[insurance$sex="m"]
select1 = insurance[insurance$sex="m",]
select1 = insurance[insurance$sex=='m',]
select1
head(select1, n=3)
select2 = insurance[which(insurance$sex=='f' & insurance$job==2),]
head(select2, n=3)
select3 = insurance[which(insurance$job==3 & insurance$salary >= 140),]
head(select3, n=3)
select3 = insurance[(insurance$job==3 & insurance$salary >= 140),]
select3
select2 = insurance[insurance$sex=='f' & insurance$job==2,]
select2
utils:::menuInstallPkgs()
library(dplyr)
dim(insurance)
tbl_df(insurance)
tbl_df(insurance)
filter(insurance, sex=='m', edu == 3)
sel_1 = filter(insurance, sex=='m', edu == 3)
sel_1
sel_2 = filter(insurance, sex=='m' | edu == 3)
sel_2
utils:::menuInstallPkgs()
library(hflights)
dim(hfilghts)
dim(hflights)
tbl_df(hflights)
tbl_df(insurance)
sel_3 = select(sex, job, amount, salary)
sel_3 = select(insurance, sex, job, amount, salary)
head(sel_3)
sel_4 = filter(select(insurance, sex, job, amount, salary), edu=1)
sel_4 = filter(select(insurance, sex, job, amount, salary), edu==1)
sel_4 = filter(select(insurance, sex, job, amount, salary), job==1)
head(sel_4)
sel_5 = select(insurance, job:salary)
head(sel_5)
mutate(insurance, amopersal = amount/salary)
insu_add = mutate(insurance, amopersal = amount/salary)
head(insu_add)
sel_3 = select(sex, job, amount, salary)
sel_3 = select(insurance, sex, job, amount, salary)
arrange(sel_3, salary)
arr_sele_3 = arrange(sel_3, salary)
sel_3_arr = arrange(sel_3, salary)
head(sel_3_arr)
sel_3_arrd = arrange(sel_3, desc(salary))
head(sel_3_arrd)
sel_3_arr = arrange(sel_3, c(sex, job))
sel_3_arr = arrange(sel_3, sex, job)
head(sel_3_arr)
sel_3_arrd = arrange(sel_3, desc(sex, job))
head(sel_3_arrd)
sel_3_g = group_by(sel_3, sex, job)
sel_3_g_m = summarise(sel_3_g, salmean = mean(salary), na.rm=TRUE)
sel_3_g_m
sel_3_g2 = group_by(sel_3, sex)
sel_3_g2_m = summarise(sel_3_g, salmean = mean(salary), na.rm=TRUE)
sel_3_g2_m
ins_job = arrange(insurance, job)
ins_job
ins_job_g = group_by(insurance, job)
ins_job_g
ins_job_g = group_by(ins, job)
ins_job_g = group_by(ins_job, job)
ins_job_g = group_by(ins, job)
ins_job_g = group_by(ins_job, job)
ins_job_g
ins_job_gm = summarize(ins_job_g, amMean=mean(amount), aSal=mean(salary))
ins_job_gm
ins_job_gm = summarize(ins_job_g, amMean=mean(amount), aSal=mean(salary), na.rm=T)
ins_job_gm
ins_job_gm = summarize(ins_job_g, amMean=mean(amount), aSal=mean(salary), na.rm=F)
ins_job_gm
ins_job_g
(7+4.5+17+22+7+6)/6
(110+113+200+88+138)/5
(135+127+95+110+105+110+85)/7
q()
x = c(1:10)
y = 1.5*x + rnorm(10)
plot(x,y)
x+y
getwd()
setwd("C:/Rfolder/data")
library("cluster", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("rgl")
library("rgl", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("dplyr", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("hflights", lib.loc="C:/Program Files/R/R-3.1.2/library")
tbl_df(flights)
data(hflights)
flights = tbk_df(hflights)
flights = tbl_df(hflights)
flights
x = c(1:10)
y = 2.0 + 1.5*x + rnorm(10)
plot(x,y)
plot(x,y, pch=18, col=BLUE)
plot(x,y, pch=18, col="BLUE")
q()
insurance <- read.table("C:/Rfolder/data/insurance.txt", header=TRUE, quote="\"")
View(insurance)
View(insurance)
View(ins_job_gm)
37+28+46+55+32+50+44
90+90+131
90/311
131/311
q()
x = c(1:100)
y = 2*x + rnorm(100)
plot(x,y)
q()
